buildscript {
    repositories {
        maven {url "http://repo.spring.io/libs-snapshot"}
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.1.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'application'


sourceCompatibility = 1.8
version = '1.0.1'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

//sourceSets.main.java.srcDirs += ['lib', 'elements', 'src', 'main', 'java'].join(File.separator)

ext {
    typesafeConfigVersion       = '1.2.0'

    springBootVersion           = '1.0.1.RELEASE'
    springVersion               = '4.0.3.RELEASE'
    springSecurityVersion       = '3.2.3.RELEASE'

    hibernateVersion            = '4.3.4.Final'

    slf4jVersion                = '1.7.6'

    mysqlJdbcVersion            = '5.1.28'
    h2Version                   = '1.3.175'

    jodaTimeVersion             = '2.3'
    jacksonVersion              = '2.3.2'
    thymeleafVersion            = '2.1.2.RELEASE'

    testNgVersion               = '6.8.7'
}


jar {
    baseName = 'spring-boot-mvc'
    version =  '0.1.0'
}

mainClassName = "net.rainmore.platform.Application"

dependencies {
    compile("com.typesafe:config:${typesafeConfigVersion}")

    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile ("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-orm:${springBootVersion}")

//    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
//    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
//    compile("org.springframework.hateoas:spring-hateoas:0.8.0.RELEASE")

    compile ("org.springframework.security:spring-security-web:${springSecurityVersion}")
    compile ("org.springframework.security:spring-security-config:${springSecurityVersion}")

//    compile("org.hibernate:hibernate-validator-cdi:5.0.2.Final")

    // logging
    compile("org.slf4j:slf4j-api:${slf4jVersion}")

    // persistence
    compile("org.springframework:spring-orm:4.0.0.RELEASE")
    compile("org.springframework.data:spring-data-jpa:1.4.2.RELEASE")

    compile("javax.validation:validation-api:1.1.0.Final")
    compile("org.hibernate:hibernate-validator:5.0.2.Final")
    compile("org.hibernate:hibernate-entitymanager:$hibernateVersion")

    // connection
    compile("com.jolbox:bonecp:0.8.0.RELEASE")

    // db driver
//    compile("mysql:mysql-connector-java:$mysqlJdbcVersion")
    compile("com.h2database:h2:${h2Version}")

    // utils
    compile("org.apache.commons:commons-lang3:3.1")
    compile("joda-time:joda-time:$jodaTimeVersion")
    compile("org.jadira.usertype:usertype.core:3.1.0.CR10")

    // jackson json
    compile("com.fasterxml.jackson.core:jackson-core")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org:${jacksonVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:${jacksonVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}")

    // thymeleaf template
    compile("org.thymeleaf:thymeleaf:${thymeleafVersion}")
    compile("org.thymeleaf:thymeleaf-spring4:${thymeleafVersion}")
    compile("org.thymeleaf.extras:thymeleaf-extras-conditionalcomments:2.1.0.RELEASE")
    compile("net.sourceforge.html5valdialect:html5valdialect:2.1.0")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2")

    // testing
    /*
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.testng:testng:${testNgVersion}")
    testCompile("org.hamcrest:hamcrest-all:1.3")
    testCompile("org.mockito:mockito-all:1.9.5")
    testCompile("com.jayway.jsonpath:json-path:0.9.1")
    testCompile("com.jayway.jsonpath:json-path-assert:0.9.1")
    testCompile("com.github.springtestdbunit:spring-test-dbunit:1.0.0")
    testCompile("org.dbunit:dbunit:2.4.9")
    */
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

applicationDefaultJvmArgs = ["-Dspringloaded=explain -javaagent:/Users/jrong/Applications/springloaded-1.2.0.BUILD-20140409.201438-12.jar -noverify"]

test {
    useJUnit {
//        exclude 'com/worldmanager/platform/nextgen/**'
    }
}

task boot {
    dependsOn clean, processResources, bootRun
}
